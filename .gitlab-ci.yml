default:
  image: python:3.8.12

stages:
  - static-analysis
  - formatting
  - test
  #- doc

pylint:
  stage: static-analysis
  before_script:
    - pip install pylint pylint-exit anybadge
  script:
    - mkdir ./pylint
    - pylint --output-format=text desire_coap_server/ | tee ./pylint/pylint.log || pylint-exit $?
    - PYLINT_SCORE=$(sed -n 's/^Your code has been rated at \([-0-9.]*\)\/.*/\1/p' ./pylint/pylint.log)
    - anybadge --label=Pylint --file=pylint/pylint.svg --value=$PYLINT_SCORE 2=red 4=orange 8=yellow 10=green
    - echo "Pylint score is $PYLINT_SCORE"
  artifacts:
    paths:
      - ./pylint/

black:
  stage: formatting
  needs: []
  before_script:
    - pip install black anybadge
  script:
    - mkdir ./black
    - black desire_coap_server --check
    - BLACK_STATUS=$?
    - anybadge --label=Black --color red  --value=$BLACK_STATUS --file=./black/black.svg 1=green
    - echo "Black status is $BLACK_STATUS"
  artifacts:
    paths:
      - ./black/

pytest:
  stage: test
  needs: []
  before_script:
    - cd desire_coap_server/
    - pip install -r requirements.txt
    - pip install -r test_requirements.txt
    - PYTHONPATH=. python tools/edhoc_generate_keys.py
  script:
    - cd desire_coap_server
    - PYTHONPATH=$PYTHONPATH:desire_coap_server/ pytest -x --cov=. -vvv

