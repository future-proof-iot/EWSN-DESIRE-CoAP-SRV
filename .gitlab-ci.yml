default:
  image: python:3.8.12

stages:
  - static-analysis
  - formatting
  - test
  #- doc

variables:
  PIP_CACHE_DIR: "$CI_PROJECT_DIR/.cache"
  DESIRE_COAP_SERVER_PATH: "$CI_PROJECT_DIR/desire_coap_server"

cache:
  paths:
    - .cache/
    - venv/

before_script:
  - pip install virtualenv
  - virtualenv venv
  - source venv/bin/activate
  - pip install pylint pylint-exit anybadge black
  - pip install -r $DESIRE_COAP_SERVER_PATH/requirements.txt 
  - pip install -r $DESIRE_COAP_SERVER_PATH/test_requirements.txt 

pylint:
  stage: static-analysis
  needs: []
  allow_failure: true
  #before_script:
  #  - pip install pylint pylint-exit anybadge
  script:
    - mkdir ./pylint
    - pylint --output-format=text desire_coap_server/ | tee ./pylint/pylint.log || pylint-exit $?
    - PYLINT_SCORE=$(sed -n 's/^Your code has been rated at \([-0-9.]*\)\/.*/\1/p' ./pylint/pylint.log)
    - anybadge --label=Pylint --file=pylint/pylint.svg --value=$PYLINT_SCORE 2=red 4=orange 8=yellow 10=green
    - echo "Pylint score is $PYLINT_SCORE"
  artifacts:
    paths:
      - ./pylint/

black:
  stage: formatting
  needs: []
  allow_failure: true
  #before_script:
  #  - pip install black anybadge
  script:
    - mkdir ./black
    - black desire_coap_server --check
    - BLACK_STATUS=$?
    - anybadge --label=Black --color red  --value=$BLACK_STATUS --file=./black/black.svg 1=green
    - echo "Black status is $BLACK_STATUS"
  artifacts:
    paths:
      - ./black/

pytest:
  stage: test
  needs: []
  before_script:
    - cd $DESIRE_COAP_SERVER_PATH
    - pwd
    - pip freeze
    #- pip install -r requirements.txt
    #- pip install -r test_requirements.txt
    - PYTHONPATH=$PYTHONPATH:. python tools/edhoc_generate_keys.py
    #- apt-get update && apt-get install -y net-tools iputils-ping
    #- ifconfig
    #- ping -c 2 localhost
    #- ping6 -c 2 ::1
  script:
    - pwd
    - PYTHONPATH=$PYTHONPATH:. pytest -x --cov=. -vvv
    #- PYTHONPATH=$PYTHONPATH:. pytest -x -s -o log_cli=true --log-cli-level=DEBUG
